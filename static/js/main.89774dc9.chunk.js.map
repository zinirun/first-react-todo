{"version":3,"sources":["CreateTodo.js","TodoList.js","App.js","index.js"],"names":["CreateTodo","title","onCreate","onChange","className","name","placeholder","value","autoComplete","onClick","Todo","todo","onRemove","onToggle","id","isImportant","style","background","color","TodoList","todos","map","key","App","useState","inputs","setInputs","setTodos","nextId","useRef","length","newTodo","current","e","target","filter","ReactDOM","render","document","getElementById"],"mappings":"uNAoBeA,MAlBf,YAAoD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACrC,OACE,yBAAKC,UAAU,kBACb,2BACEA,UAAU,eACVC,KAAK,QACLC,YAAY,sDACZC,MAAON,EACPE,SAAUA,EACVK,aAAa,QAEf,4BAAQJ,UAAU,YAAYK,QAASP,GAAvC,kBCXN,SAASQ,EAAT,GAA6C,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACtBC,EAA2BH,EAA3BG,GAAIb,EAAuBU,EAAvBV,MAAOc,EAAgBJ,EAAhBI,YACnB,OACE,yBACEX,UAAU,eACVY,MAAO,CACLC,WAAYF,EAAc,UAAY,YAGxC,0BACEX,UAAU,aACVY,MAAO,CACLE,MAAOH,EAAc,UAAY,YAGlCd,GAEH,4BAAQG,UAAU,eAAeK,QAAS,kBAAMI,EAASC,KAAzD,gBAGA,4BAAQV,UAAU,YAAYK,QAAS,kBAAMG,EAASE,KAAtD,iBAiBSK,MAVf,YAAkD,IAA9BC,EAA6B,EAA7BA,MAAOR,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACnC,OACE,yBAAKT,UAAU,oBACZgB,EAAMC,KAAI,SAACV,GAAD,OACT,kBAACD,EAAD,CAAMY,IAAKX,EAAKG,GAAIH,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,S,MCmCvDU,MA/Df,WACE,IADa,EAEeC,mBAAS,CACnCvB,MAAO,KAHI,mBAENwB,EAFM,KAEEC,EAFF,KAMLzB,EAAUwB,EAAVxB,MANK,EAgBauB,mBAAS,CACjC,CACEV,GAAI,EACJb,MAAO,8CACPc,aAAa,KApBJ,mBAgBNK,EAhBM,KAgBCO,EAhBD,KAwBPC,EAASC,iBAAO,GA2BtB,OACE,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,aApDF,gBAsDX,0BAAMY,MAAO,CAAEE,MAAO,YAAtB,MAEF,kBAAC,EAAD,CAAYjB,MAAOA,EAAOC,SAhCb,WACf,KAAID,EAAM6B,OAAS,GAAnB,CAGE,IAAMC,EAAU,CACdjB,GAAIc,EAAOI,QACX/B,SAEF0B,EAAS,GAAD,mBAAKP,GAAL,CAAYW,KACpBL,EAAU,CACRzB,MAAO,KAET2B,EAAOI,SAAW,IAoB4B7B,SAjDjC,SAAC8B,GAAO,IAAD,EACEA,EAAEC,OAAlB7B,EADc,EACdA,KAAME,EADQ,EACRA,MACdmB,EAAU,eACLD,EADI,eAENpB,EAAOE,QA8CR,kBAAC,EAAD,CAAUa,MAAOA,EAAOR,SAjBX,SAACE,GAChBa,EAASP,EAAMe,QAAO,SAACxB,GAAD,OAAUA,EAAKG,KAAOA,OAgBED,SAb/B,SAACC,GAChBa,EACEP,EAAMC,KAAI,SAACV,GAAD,OAAWA,EAAKG,KAAOA,EAAZ,eAAsBH,EAAtB,CAA4BI,aAAcJ,EAAKI,cAAgBJ,WChD1FyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.89774dc9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction CreateTodo({ title, onCreate, onChange }) {\r\n  return (\r\n    <div className=\"create-wrapper\">\r\n      <input\r\n        className=\"create-title\"\r\n        name=\"title\"\r\n        placeholder=\"할 일을 입력하세요!\"\r\n        value={title}\r\n        onChange={onChange}\r\n        autoComplete=\"off\"\r\n      />\r\n      <button className=\"create-bt\" onClick={onCreate}>\r\n        등록\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTodo;\r\n","import React from 'react';\r\n\r\nfunction Todo({ todo, onRemove, onToggle }) {\r\n  const { id, title, isImportant } = todo;\r\n  return (\r\n    <div\r\n      className=\"todo-wrapper\"\r\n      style={{\r\n        background: isImportant ? '#FFE8EE' : '#ececff',\r\n      }}\r\n    >\r\n      <span\r\n        className=\"todo-title\"\r\n        style={{\r\n          color: isImportant ? 'crimson' : '#171760',\r\n        }}\r\n      >\r\n        {title}\r\n      </span>\r\n      <button className=\"important-bt\" onClick={() => onToggle(id)}>\r\n        중요\r\n      </button>\r\n      <button className=\"remove-bt\" onClick={() => onRemove(id)}>\r\n        삭제\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoList({ todos, onRemove, onToggle }) {\r\n  return (\r\n    <div className=\"todolist-wrapper\">\r\n      {todos.map((todo) => (\r\n        <Todo key={todo.id} todo={todo} onRemove={onRemove} onToggle={onToggle} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useRef, useState } from 'react';\nimport CreateTodo from './CreateTodo';\nimport TodoList from './TodoList';\nimport './App.css';\n\nfunction App() {\n  const appTitle = '할 일';\n  const [inputs, setInputs] = useState({\n    title: '',\n  });\n\n  const { title } = inputs;\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: '리액트 혼내주기',\n      isImportant: false,\n    },\n  ]);\n\n  const nextId = useRef(2);\n  const onCreate = () => {\n    if (title.length < 1) {\n      return;\n    } else {\n      const newTodo = {\n        id: nextId.current,\n        title,\n      };\n      setTodos([...todos, newTodo]);\n      setInputs({\n        title: '',\n      });\n      nextId.current += 1;\n    }\n  };\n\n  const onRemove = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const onToggle = (id) => {\n    setTodos(\n      todos.map((todo) => (todo.id === id ? { ...todo, isImportant: !todo.isImportant } : todo)),\n    );\n  };\n\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"todo-logo\">\n        {appTitle}\n        <span style={{ color: 'crimson' }}>.</span>\n      </div>\n      <CreateTodo title={title} onCreate={onCreate} onChange={onChange} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}